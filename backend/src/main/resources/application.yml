#=============================================================================
# SERVER CONFIGURATION
#=============================================================================
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${SERVER_CONTEXT_PATH:/api/v1}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,application/javascript,application/json
    min-response-size: 1024
  tomcat:
    max-threads: ${SERVER_MAX_THREADS:200}
    accept-count: ${SERVER_ACCEPT_COUNT:100}
    max-connections: ${SERVER_MAX_CONNECTIONS:8192}

#=============================================================================
# SPRING CONFIGURATION
#=============================================================================
spring:
  application:
    name: ReelNetApp
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:prod}

  #-----------------------------------------------------------------------------
  # Database Configuration
  #-----------------------------------------------------------------------------
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/reelnet}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      minimum-idle: ${SPRING_DATASOURCE_MINIMUM_IDLE:5}
      maximum-pool-size: ${SPRING_DATASOURCE_MAXIMUM_POOL_SIZE:25}
      connection-timeout: 30000
      max-lifetime: 60000
      # Cấu hình PostgreSQL tối ưu
      data-source-properties:
        reWriteBatchedInserts: true
        cachePrepStmts: true
        useServerPrepStmts: true

  #-----------------------------------------------------------------------------
  # JPA Configuration
  #-----------------------------------------------------------------------------
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          '[batch_size]': 25
          '[order_inserts]': true
          '[order_updates]': true
        transaction:
          jta:
            platform: org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform
        generate_statistics: false

  #-----------------------------------------------------------------------------
  # Security Configuration
  #-----------------------------------------------------------------------------
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://${auth0.domain}/
          jwk-set-uri: https://${auth0.domain}/.well-known/jwks.json
    require-ssl: ${SECURITY_REQUIRE_SSL:false}
    headers:
      frame-options: DENY
      content-type-options: nosniff
      xss-protection: 1; mode=block

  #-----------------------------------------------------------------------------
  # Kafka Configuration
  #-----------------------------------------------------------------------------
  kafka:
    enabled: ${KAFKA_ENABLED:false}
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:reelnet-group}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    topics:
      domain-events: ${KAFKA_TOPIC_DOMAIN_EVENTS:domain-events}

  #-----------------------------------------------------------------------------
  # Database Migration
  #-----------------------------------------------------------------------------
  flyway:
    enabled: ${FLYWAY_ENABLED:true}
    clean-disabled: true

  #-----------------------------------------------------------------------------
  # JSON Serialization
  #-----------------------------------------------------------------------------
  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: UTC
    default-property-inclusion: NON_NULL

  #-----------------------------------------------------------------------------
  # Cache Configuration
  #-----------------------------------------------------------------------------
  cache:
    type: ${SPRING_CACHE_TYPE:caffeine}
    caffeine:
      spec: maximumSize=1000,expireAfterAccess=600s
    redis:
      time-to-live: ${REDIS_TTL:3600000}
      cache-null-values: false
      use-key-prefix: true
    

  #-----------------------------------------------------------------------------
  # Mail Configuration
  #-----------------------------------------------------------------------------
  mail:
    host: ${SPRING_MAIL_HOST:smtp.example.com}
    port: ${SPRING_MAIL_PORT:587}
    username: ${SPRING_MAIL_USERNAME:your-email@example.com}
    password: ${SPRING_MAIL_PASSWORD:your-email-password}
    properties:
      mail:
        smtp:
          auth: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:true}
          starttls:
            enable: ${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE:true}
          timeout: 5000
          connection-timeout: 5000
    test-connection: false

  #-----------------------------------------------------------------------------
  # File Upload Configuration
  #-----------------------------------------------------------------------------
  servlet:
    multipart:
      enabled: true
      max-file-size: ${SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE:10MB}
      max-request-size: ${SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE:10MB}
      file-size-threshold: 2KB
      location: ${java.io.tmpdir}

#=============================================================================
# LOGGING CONFIGURATION
#=============================================================================
logging:
  level:
    root: ${LOG_LEVEL_ROOT:INFO}
    "[com.learning.reelnet]": ${LOG_LEVEL_APP:INFO}
    "[org.hibernate.SQL]": INFO
    "[org.springframework.security]": INFO
    "[org.hibernate.engine.internal.StatisticalLoggingSessionEventListener]": ERROR
    "[org.hibernate.stat]": ERROR

#=============================================================================
# API DOCUMENTATION - SWAGGER/OPENAPI
#=============================================================================
springdoc:
  api-docs:
    enabled: ${SPRINGDOC_API_DOCS_ENABLED:false}
    path: /api-docs
  swagger-ui:
    enabled: ${SPRINGDOC_SWAGGER_UI_ENABLED:false}
    path: /swagger-ui.html
    disable-swagger-default-url: true
    doc-expansion: none
  default-produces-media-type: application/json
  default-consumes-media-type: application/json
  packages-to-scan:
    - com.learning.reelnet
  show-actuator: false

#=============================================================================
# CROSS-ORIGIN RESOURCE SHARING (CORS)
#=============================================================================
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000}
  allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
  allowed-headers: ${CORS_ALLOWED_HEADERS:Content-Type,Authorization,X-Requested-With,Accept,Origin}
  exposed-headers: ${CORS_EXPOSED_HEADERS:Authorization}
  max-age: ${CORS_MAX_AGE:3600}
  allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}

#=============================================================================
# AUTHENTICATION - AUTH0 CONFIGURATION
#=============================================================================
auth0:
  domain: ${AUTH0_DOMAIN:dev-example.auth0.com}
  clientId: ${AUTH0_CLIENT_ID:default-client-id}
  clientSecret: ${AUTH0_CLIENT_SECRET:default-secret}
  audience: ${AUTH0_AUDIENCE:https://dev-example.auth0.com/api/v2/}
  management:
    clientId: ${AUTH0_MGMT_CLIENT_ID:default-mgmt-client-id}
    clientSecret: ${AUTH0_MGMT_CLIENT_SECRET:default-mgmt-secret}
    audience: ${AUTH0_MGMT_AUDIENCE:https://dev-example.auth0.com/api/v2/}
    api:
      rate-limit: 5
    cache:
      enabled: true
      time-to-live: 3600
  webhook:
    signing-secret: ${AUTH0_WEBHOOK_SIGNING_SECRET:default-secret}
    verify-signature: ${AUTH0_WEBHOOK_VERIFY_SIGNATURE:true}
    events: ${AUTH0_WEBHOOK_EVENTS:user.created,user.updated,user.deleted}

#=============================================================================
# USER SYNCHRONIZATION CONFIGURATION
#=============================================================================
user:
  sync:
    minimum-interval-hours: ${USER_SYNC_MIN_INTERVAL:24}
    create-if-not-exists: ${USER_SYNC_CREATE_IF_NOT_EXISTS:true}
    role-mapping:
      admin: ROLE_ADMIN
      content-manager: ROLE_CONTENT_MANAGER
      user-manager: ROLE_USER_MANAGER
      user: ROLE_USER

#=============================================================================
# CACHE CONFIGURATION
#=============================================================================
cache:
  user-info:
    expiration: ${CACHE_USER_INFO_EXPIRATION:3600}
    max-size: ${CACHE_USER_INFO_MAX_SIZE:1000}
  permissions:
    expiration: ${CACHE_PERMISSIONS_EXPIRATION:3600}
    max-size: ${CACHE_PERMISSIONS_MAX_SIZE:500}
  roles:
    expiration: ${CACHE_ROLES_EXPIRATION:3600}
    max-size: ${CACHE_ROLES_MAX_SIZE:200}

#=============================================================================
# APPLICATION SPECIFIC CONFIGURATION
#=============================================================================
app:
  #-----------------------------------------------------------------------------
  # API Configuration
  #-----------------------------------------------------------------------------
  api:
    problem-base-url: ${APP_PROBLEM_BASE_URL:https://api.reelnet.com/problems}
    version: ${APP_API_VERSION:v1}
  version: ${APP_VERSION:1.0.0}

  #-----------------------------------------------------------------------------
  # Rate Limiting
  #-----------------------------------------------------------------------------
  rate-limit:
    enabled: ${RATE_LIMIT_ENABLED:true}
    cache-name: ${RATE_LIMIT_CACHE_NAME:rateLimitCache}
    limits:
      default:
        capacity: 20
        refill-tokens: ${RATE_LIMIT_DEFAULT_REFILL_TOKENS:50}
        refill-duration: ${RATE_LIMIT_DEFAULT_REFILL_DURATION:1}
        refill-time-unit: ${RATE_LIMIT_DEFAULT_REFILL_TIME_UNIT:MINUTES}
      api:
        capacity: 50
        refill-tokens: ${RATE_LIMIT_API_REFILL_TOKENS:100}
        refill-duration: ${RATE_LIMIT_API_REFILL_DURATION:1}
        refill-time-unit: ${RATE_LIMIT_API_REFILL_TIME_UNIT:MINUTES}
      auth:
        capacity: 5
        refill-tokens: ${RATE_LIMIT_AUTH_REFILL_TOKENS:10}
        refill-duration: ${RATE_LIMIT_AUTH_REFILL_DURATION:1}
        refill-time-unit: ${RATE_LIMIT_AUTH_REFILL_TIME_UNIT:MINUTES}

  #-----------------------------------------------------------------------------
  # Pagination Configuration
  #-----------------------------------------------------------------------------
  pagination:
    default-page-size: ${APP_DEFAULT_PAGE_SIZE:20}
    max-page-size: ${APP_MAX_PAGE_SIZE:100}

  #-----------------------------------------------------------------------------
  # File Storage Configuration
  #-----------------------------------------------------------------------------
  storage:
    location: ${APP_STORAGE_LOCATION:/data/reelnet/uploads}
    allowed-content-types: ${APP_STORAGE_ALLOWED_CONTENT_TYPES:image/jpeg,image/png,image/gif,application/pdf}
    max-file-size: ${APP_STORAGE_MAX_FILE_SIZE:5MB}
    naming-strategy: ${APP_STORAGE_NAMING_STRATEGY:UUID}
    create-directories: ${APP_STORAGE_CREATE_DIRECTORIES:true}
    thumbnail:
      enabled: ${APP_STORAGE_THUMBNAIL_ENABLED:true}
      width: ${APP_STORAGE_THUMBNAIL_WIDTH:200}
      height: ${APP_STORAGE_THUMBNAIL_HEIGHT:200}

  #-----------------------------------------------------------------------------
  # Email Configuration
  #-----------------------------------------------------------------------------
  email:
    from: ${APP_EMAIL_FROM:noreply@reelnet.com}
    support: ${APP_EMAIL_SUPPORT:support@reelnet.com}
    templates:
      path: ${APP_EMAIL_TEMPLATES_PATH:classpath:/templates/email/}

  #-----------------------------------------------------------------------------
  # Feature Flags
  #-----------------------------------------------------------------------------
  features:
    enable-social-login: ${FEATURE_SOCIAL_LOGIN:true}
    enable-file-upload: ${FEATURE_FILE_UPLOAD:true}
    enable-advanced-search: ${FEATURE_ADVANCED_SEARCH:true}
    enable-notifications: false
    enable-content-moderation: false
    enable-recommendation-engine: false
    enable-metrics-collection: ${FEATURE_METRICS_COLLECTION:true}

  #-----------------------------------------------------------------------------
  # Async Task Configuration
  #-----------------------------------------------------------------------------
  async:
    core-pool-size: ${ASYNC_CORE_POOL_SIZE:5}
    max-pool-size: ${ASYNC_MAX_POOL_SIZE:10}
    queue-capacity: ${ASYNC_QUEUE_CAPACITY:25}
    thread-name-prefix: ${ASYNC_THREAD_PREFIX:ReelNet-Async-}
    rejection-policy: ${ASYNC_REJECTION_POLICY:CALLER_RUNS}

#=============================================================================
# MONITORING & MANAGEMENT - ACTUATOR CONFIGURATION
#=============================================================================
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,applicationstatus,systemresources
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    applicationstatus:
      enabled: true
    systemresources:
      enabled: true
    shutdown:
      enabled: false
  health:
    diskspace:
      enabled: true
    db:
      enabled: true
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

#=============================================================================
# APPLICATION INFORMATION
#=============================================================================
info:
  application:
    name: ${spring.application.name}
    description: ${INFO_APP_DESCRIPTION:Reel Network Application Backend}
    version: ${INFO_APP_VERSION:0.1.0}
  contact:
    email: ${INFO_CONTACT_EMAIL:support@reelnet.com}
    website: ${INFO_CONTACT_WEBSITE:https://reelnet.com}
  server:
    environment: ${spring.profiles.active}
