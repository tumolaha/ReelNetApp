plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.learning'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
	
	// Enable parameter name retention for Spring DI
	withSourcesJar()
	compileJava {
		options.compilerArgs.add('-parameters')
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	flywayVersion = '10.8.1'
}

dependencies {
	// Core Spring Boot dependencies
	implementation 'org.springframework.boot:spring-boot-starter-actuator' // Actuator for monitoring and management
	implementation 'org.springframework.boot:spring-boot-starter-web' // Web application support
	implementation 'org.springframework.boot:spring-boot-starter-validation' // Validation support

	// Database dependencies
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA for database interaction
	implementation 'org.springframework.boot:spring-boot-starter-data-redis' // Redis support
	runtimeOnly 'org.postgresql:postgresql' // PostgreSQL driver
	
	// Flyway dependencies with explicit versions
	implementation "org.flywaydb:flyway-core:${flywayVersion}"
	implementation "org.flywaydb:flyway-database-postgresql:${flywayVersion}"
	
	// H2 Database for development
	runtimeOnly 'com.h2database:h2' // H2 in-memory database

	// Security dependencies
	implementation 'org.springframework.boot:spring-boot-starter-security' // Security support
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server' // OAuth2 Resource Server support
	implementation 'org.springframework.security:spring-security-oauth2-jose' // JWT and JWK support
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5' // JWT API
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5' // JWT Implementation
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // JWT Jackson integration

	// Messaging dependencies
	implementation 'org.springframework.kafka:spring-kafka' // Spring Kafka

	// Utility dependencies
	implementation 'org.springframework.boot:spring-boot-starter-mail' // Email support
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // Template engine
	implementation 'org.springframework.boot:spring-boot-starter-quartz' // Scheduling support
	implementation 'org.springframework.boot:spring-boot-starter-cache' // Caching support
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0' // OpenAPI/Swagger support

	// Development dependencies
	developmentOnly 'org.springframework.boot:spring-boot-devtools' // Development tools
	// Commenting out Docker Compose support temporarily since Docker is not installed
	// developmentOnly 'org.springframework.boot:spring-boot-docker-compose' // Docker Compose support

	// Annotation processing
	compileOnly 'org.projectlombok:lombok' // Lombok for reducing boilerplate code
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor' // Configuration processor

	// Add JSR-305 annotations
	implementation 'com.google.code.findbugs:jsr305:3.0.2'

	// Testing dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test' // Testing support
	testImplementation 'org.springframework.kafka:spring-kafka-test' // Kafka testing
	testImplementation 'org.springframework.security:spring-security-test' // Security testing
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher' // JUnit platform launcher

	// Environment variables and metrics
	implementation 'me.paulschwarz:spring-dotenv:2.5.4'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
	// Skip tests during build if needed
	enabled = project.hasProperty('skipTests') ? !project.skipTests : true
}
